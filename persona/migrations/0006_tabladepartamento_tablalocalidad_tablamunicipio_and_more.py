# Generated by Django 5.0.6 on 2024-06-03 00:02

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('persona', '0005_alter_persona_identificacion'),
    ]

    operations = [
        migrations.CreateModel(
            name='TablaDepartamento',
            fields=[
                ('cod_depto', models.CharField(primary_key=True, serialize=False)),
                ('nom_depto', models.CharField(blank=True, null=True)),
                ('provincia_id_id', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabla_departamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablaLocalidad',
            fields=[
                ('cod_ase', models.CharField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, null=True)),
                ('tipo', models.CharField(blank=True, null=True)),
                ('lat_gd', models.CharField(blank=True, null=True)),
                ('long_gd', models.CharField(blank=True, null=True)),
                ('fuente', models.CharField(blank=True, null=True)),
                ('municipio_id_id', models.CharField(blank=True, null=True)),
                ('lat_gs', models.CharField(blank=True, null=True)),
                ('long_gs', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabla_localidad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablaMunicipio',
            fields=[
                ('cod_agl', models.CharField(primary_key=True, serialize=False)),
                ('nom_agl', models.CharField(blank=True, null=True)),
                ('departamento_id_id', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabla_municipio',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablaPais',
            fields=[
                ('cod_pais', models.CharField(primary_key=True, serialize=False)),
                ('nom_pais', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabla_pais',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TablaProvincia',
            fields=[
                ('cod_pcia', models.CharField(primary_key=True, serialize=False)),
                ('nom_pcia', models.CharField(blank=True, null=True)),
                ('pais_id_id', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tabla_provincia',
                'managed': False,
            },
        ),
        migrations.AlterField(
            model_name='persona',
            name='apellidos',
            field=models.CharField(blank=True, help_text='Si posee mas de un apellido ingrese los mismos con un espacio entre cada apellido. Ej: Rodriguez Perez', max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Ingrese un dato válido. Sólo se permiten letras, espacios, guiones y apóstrofes', regex='^[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ]{2,25}+( [a-zA-ZáéíóúÁÉÍÓÚüÜñÑ]{2,25})*$')]),
        ),
        migrations.AlterField(
            model_name='persona',
            name='identificacion',
            field=models.IntegerField(help_text='Ingrese el nro de dni sin puntos', primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(message='Ingrese un numero de DNI válido. Solo se permiten 8 digitos númericos.', regex='^[0-9]{8}*$')], verbose_name='D.N.I.'),
        ),
        migrations.AlterField(
            model_name='persona',
            name='nombres',
            field=models.CharField(blank=True, help_text='Si posee mas de un nombre ingrese los mismos con un espacio entre cada nombre. Ej: Juan Carlos', max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Ingrese un dato válido. Sólo se permiten letras, espacios, guiones y apóstrofes', regex='^[a-zA-ZáéíóúÁÉÍÓÚüÜñÑ]{2,25}+( [a-zA-ZáéíóúÁÉÍÓÚüÜñÑ]{2,25})*$')]),
        ),
        migrations.CreateModel(
            name='ubicaciones',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barrio', models.CharField(max_length=100)),
                ('calle', models.CharField(blank=True, max_length=50, null=True)),
                ('altura', models.CharField(blank=True, max_length=20, null=True)),
                ('departamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.tabladepartamento')),
                ('localidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.tablalocalidad')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.tablamunicipio')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.tablapais')),
                ('persona', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='persona.persona')),
                ('provincia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='persona.tablaprovincia')),
            ],
            options={
                'verbose_name': 'Ubicacion',
                'verbose_name_plural': 'Ubicaciones',
                'db_table': 'ubicacion',
            },
        ),
    ]
